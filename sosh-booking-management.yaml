swagger: '2.0'
host: soshealth.in
basePath: /sosBookingManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /booking:
   
    post:
      operationId: createBooking
      tags:
        - Booking Management
      description: Create Booking from Customer side as Inprogress
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Booking Input
          required: true
          schema:
            $ref: '#/definitions/BookingInput'
      responses:
        '200':
          description: |
            *OK* - Inserted Booking Details Will be returned Successfully
          schema:
            $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
            
    get:
      operationId: getBookings
      tags:
        - Booking Management
      description: Get Booking from DB Depending on query clauses
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        '200':
          description: |
            *OK* - Inserted Booking Details Will be returned Successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
            
  /booking/{bookingId}:  
    put:
      deprecated: true
      operationId: updateBooking
      tags:
        - Booking Management
      description: Create Booking from Customer side as Inprogress, This will be idempotent call thats why choose PUT in place of PATCH.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: UpdateInput
          required: true
          schema:
            $ref: '#/definitions/UpdateModel'
        - in: path
          name: bookingId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Updated Put Operation will update the booking details
          schema:
            $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
    get:
      operationId: getBookingById
      tags:
        - Booking Management
      description: Get Booking Details by Booking ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bookingId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Updated Put Operation will update the booking details
          schema:
            $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteBooking
      tags:
        - Booking Management
      description: Delete Booking by Booking ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bookingId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Delete the booking details
          schema:
            $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
  
  /pastBooking/{customerId}:
    get:
      operationId: getPastBookings
      tags:
        - Booking History
      description: Get past booking of a specific customer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: customerId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Fetch the past booking details of a customer
          schema:
            type: array
            items:
              $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
            
  /currentBooking/{customerId}:
    get:
      operationId: getCurrentBooking
      tags:
        - Booking History
      description: Get past booking of a specific customer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: customerId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Fetch the past booking details of a customer
          schema:
            type: array
            items:
              $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
            
  /currentBooking/provider/{serviceProviderId}:
    get:
      operationId: getCurrentBookingByServiceProvider
      tags:
        - Booking History
      description: Get past booking of a specific Service Provider
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: serviceProviderId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Fetch the past booking details of a customer
          schema:
            type: array
            items:
              $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
  /updatePayment/{bookingId}:
    post:
      operationId: updatePayment
      tags:
        - Payment Management
      description: Update payment for a specific booking when payment is done after create booking with COD
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: UpdatePaymentDetails
          required: true
          schema:
            $ref: '#/definitions/PaymentDetailsRef'
        - in: path
          name: bookingId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Updated Put Operation will update the booking details
          schema:
            $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
  
  /verifyBooking/{bookingId}:
    post:
      operationId: verifyBooking
      tags:
        - Booking Management
      description: Booking Management verification on otp submit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: VerifyBooking
          required: true
          schema:
            $ref: '#/definitions/BookingVerification'
        - in: path
          name: bookingId
          required: true
          type: string
    
      responses:
        '200':
          description: |
            *OK* - Updated Put Operation will update the booking details
          schema:
            $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
  /cancelBooking/{bookingStatus}:
    post:
      operationId: CancelBooking
      tags:
        - Booking Management
      description: Booking Cancellation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: filters
          type: string
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a
        - in: path
          name: bookingStatus
          required: true
          type: string
      responses:
        '200':
          description: |
            *OK* - Cancel booking Operation will cancel the booking details
          schema:
            type: array
            items:
              $ref: '#/definitions/BookingDetails'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'



definitions:
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the Error
      messgae:
        type: string
        description: |
          It will contain detailed message for the Error
      reason:
        type: string
      statusCode:
        type: string
        
  PaymentStatus:
    type: string
    enum:
      - CANCELLED
      - CONFIRMED
      - FAILED
      - PENDING
      - REFUND_INIT
      - REFUND_COMPLETE
      - BOOKING_CANCELLED
          
  BookingStatus:
    type: string
    enum:
      - COMPLETED
      - PENDING
      - CANCELLED
      - CONFIRMED
      - ADMIN_CANCELLED
      - SP_CANCELLED
      - CUST_CANCELLED
  
  UpdateModel:
    type: object
    properties:
      paymentId:
        type: string
        description: | 
          After Payment Payment ID to be updated.
      paymentStatus:
        $ref: '#/definitions/PaymentStatus'
      paymentMode:
        $ref: '#/definitions/PaymentMode'
      serviceProviderId:
        type: string
        description: |
          If Service Provider changes then details of provider needs to be updated.
  
  PaymentMode:
    type: string
    enum:
      - Online
      - COD
      
  BookingVerification:
    type: object
    properties:
      serviceProviderId:
        type: string
      customerId:
        type: string
      bookingOTP:
        type: integer
      
  AddressRef:
    type: object
    properties:
      street1:
        type: string
        description: |
          Street 1 of Organization
      street2:
        type: string
        description: |
          Street 2 of Organization
      country:
        type: string
        description: |
          Country of the organizaton
      state:
        type: string
        description: |
          State where its Situated
      zipcode:
        type: string
        description: |
          Zipcode for the organization
          
  CustomerRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Customer ID will be populated
      fullName:
        type: string
        description: |
          Full Name of the Customer
      profilePic:
        type: string
        format: binary
        description: |
          profile picture of service provider
      mobile:
        type: string
          
  ServiceProviderRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Service Provider ID
      qualification:
        type: string
        description: |
          Qualification of a Service Provider
      fullName:
        type: string
        description: |
          Full Name of a Service Provider must be visible
      profilePic:
        type: string
        format: binary
        description: |
          profile picture of service provider
      mobile:
        type: string
      serviceStatus:
        type: string
      
        
  BookingDetails:
    type: object
    properties:
      id: 
        type: string
        description: | 
          Booking ID must unique
      deviceId: 
        type: string
        description: | 
          From which Device this booking is been made
      bookingDate:
        type: string
        description: |
          Booking Date Must be populated
      bookingOTP: 
        type: integer
        description: |
          This OTP must be Booking OTP which needs to be validated before Servicing
      serviceProvider:
        $ref: '#/definitions/ServiceProviderRef'
      customer:
        $ref: '#/definitions/CustomerRef'
      patientDetails:
        $ref: '#/definitions/PatientDetailsRef'
      serviceAddress:
        type: string
      bookingStatus:
        $ref: '#/definitions/BookingStatus'
      serviceStatus:
        $ref: '#/definitions/ServiceStatus'
      paymentDetails:
        $ref: '#/definitions/PaymentDetailsRef'
      feeDetails:
        type: number
      departmentDetails:
        $ref: '#/definitions/DepartmentRef'
        
  PaymentDetailsRef:
    type: object
    properties:
      paymentId:
        type: string
        description: | 
          Payment / Transaction ID
      paymentMode:
        $ref: '#/definitions/PaymentMode'
      amount:
        type: number
        description: |
          Fees of Service provider  
      paymentStatus:
        $ref: '#/definitions/PaymentStatus'
      paymentDate:
        type: string
        description: |
          Payment Date Must be populated
        
  BookingInput:
    type: object
    properties:
      serviceProviderId:
        type: string
        description: |
          Service Provider Id
      customerId: 
        type : string
        description: |
          Customer ID for booking
      serviceAddress:
        type: string
      serviceStatus:
        $ref: '#/definitions/ServiceStatus'
      patientDetails:
        $ref: '#/definitions/PatientDetailsRef'
      paymentDetails:
        $ref: '#/definitions/PaymentDetailsRef'
      departmentDetails:
        $ref: '#/definitions/DepartmentRef'
  
  DepartmentRef:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
        
  PatientDetailsRef:
    type: object
    properties:
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      age:
        type: string
      sex:
        $ref: '#/definitions/GenderRef'
        
  GenderRef:
    type: string
    enum:
      - MALE
      - FEMALE
      
  ServiceStatus:
    type: string
    enum:
      - COMPLETED
      - DECLINED
      - ACCEPTED
      - INTRANSIT
      - ENGAGED
      - CANCELLED
      - BOOKING_CANCELLED
