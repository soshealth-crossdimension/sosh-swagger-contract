swagger: '2.0'
host: soshealth.in
basePath: /price-management/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /pricing:
    post:
      operationId: createPricing
      tags:
        - Price Management
      description: Create Pricing for Service Provider
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Price Input
          required: true
          schema:
            $ref: '#/definitions/PriceInput'
      responses:
        '200':
          description: |
            *OK* - Inserted Pricing Details Will be returned Successfully
          schema:
            $ref: '#/definitions/Price'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
            
    get:
      operationId: getProviderPricing
      tags:
        - Price Management
      description: Get Pricing for Service Provider
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: serviceId
          required: true
          type: string
          description: |
            * Accepts multiple values "," separated
            * The value "All" is for getting All price details. (Not Case Sensitive)
            
      responses:
        '200':
          description: |
            *OK* - Inserted Pricing Details Will be returned Successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Price'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
            
  /transaction:
    post:
      operationId: createTransaction
      tags:
        - Transaction Management
      description: Create Transaction for Service Provider
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Transaction Input
          required: true
          schema:
            $ref: '#/definitions/TransactionHistory'
      responses:
        '200':
          description: |
            *OK* - Inserted Transaction Details Will be returned Successfully
          schema:
            $ref: '#/definitions/TransactionHistory'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
            
    get:
      operationId: getTransaction
      tags:
        - Transaction Management
      description: Get Transactions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: transactionId
          required: false
          type: string
          description: |
            * Accepts multiple values "," separated
            * The value "All" is for getting All Transaction details. (Not Case Sensitive)
        - in: query
          name: transactionStatus
          required: false
          type: string
          description: |
            * Accepts multiple values "," separated
        - in: query
          name: transactionMode
          required: false
          type: string
          description: |
            * Accepts multiple values "," separated
            
      responses:
        '200':
          description: |
            *OK* - Inserted Pricing Details Will be returned Successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionHistory'
        '400':
          description: |
            *Error* - Bad Request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: |
            *Error* - Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: |
            *Error* - Internal Server error
          schema:
            $ref: '#/definitions/Error'
      
definitions:
  PriceInput:
    type: object
    properties:
      serviceProviderId: 
        type: string
        description: |
          Price Id would be primary key for Price table and same as Provider's Id
      customerPrice:
        $ref: '#/definitions/Amount'
      deductionRate:
        type: number
        description: |
          Rate on which actual and Customer price will be deducted
      taxRate:
        type: number
        description: |
          Rate on which TDS will be deducted
    
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the Error
      messgae:
        type: string
        description: |
          It will contain detailed message for the Error
          
  TransactionHistory:
    type: object
    properties:
      id:
        type: string
        description: |
          Transaction ID fro each Transaction to be done
      recipientId:
        type: string
        description: | 
          Transaction Recipient Id - Typically Service Provider ID
      senderId:
        type: string
        description: |
          Typically End user's Id - Customer Id
      transactionAmount:
        $ref: '#/definitions/Amount'
      transactionDate:
        type: string
        description: |
          On which Date Transaction Happened
      transactionStatus:
        $ref: '#/definitions/TransactionStatus'
      transactionMode:
        $ref: '#/definitions/TransactionMode'
  
  TransactionMode:
    type: string
    enum:
    - ONLINE
    - COD
    
  TransactionStatus:
    type: string
    description: |
      Transaction Status would be filter parameter
    enum:
    - RECEIVED
    - REFUND
    
  Price:
    allOf:
      - $ref: '#/definitions/PriceInput'
      - type: object
        properties:
          id: 
            type: string
            description: |
              Price Id would be primary key for Price table and same as Provider's Id
          actualPrice:
            $ref: '#/definitions/Amount'
          taxAmount:
            $ref: '#/definitions/Amount'
          taxDeductedServiceCharge:
            $ref: '#/definitions/Amount'
        
  Amount:
    type: object
    properties:
      unit:
        type: string
        description: |
          Price Amount Unit | INR , Dollar , Euro
      value:
        type: string
        description: | 
          Value of object
         
